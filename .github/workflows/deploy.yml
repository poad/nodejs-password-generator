name: Deploy to CloudFront

on:
  push:
    branches: ["main"]

  workflow_dispatch:

env:
  OIDC_IAM_ROLE_ARN: ${{ secrets.OIDC_IAM_ROLE_ARN }}
  AWS_REGION: us-west-2

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          check-latest: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]
            - args: [--global, aws-cdk, esbuild]

      - run: pnpm approve-builds -g

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ env.OIDC_IAM_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: deploy
        working-directory: example/cdk
        run: |
          cdk deploy

      - name: Retirives CloudFront Distribution Domain Name
        id: deployment
        run: |
          CF_ID="$(aws cloudformation describe-stack-resources --stack-name nodejs-password-generator --query 'StackResources[?ResourceType==`AWS::CloudFront::Distribution`].[PhysicalResourceId][]' --output text)"
          CF_DOMAIN="$(aws cloudfront get-distribution --id "$CF_ID" --query 'Distribution.DomainName' --output text)"
          echo "page_url=$CF_DOMAIN" >> "$GITHUB_OUTPUT"
